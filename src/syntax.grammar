@top LiquidTemplate { (Output | Tag | HTML)* }
@precedence { Output, Tag, HTML }

Output { beginOutput dash? space? FilteredExpression ~value space? dash? endOutput }
Tag { beginTag dash? space? TagName (space TagArg ~id)* space? dash? endTag }

TagArg { Identifier | KeyValuePair | any }

TagName { Identifier }

FilteredExpression { Value (~value space? Filter)* }

Value { (Identifier | SquareBracketProperty | Literal) ~id PropertyAccess* }

Filter { "|" space? Identifier space? ":" space? FilterArgs ~filterarg }

FilterArgs { FilterArg (~filterarg space? "," space? FilterArg)* }

FilterArg { Value | KeyValuePair }

KeyValuePair { Identifier ~id space? ":" space? Value ~value }

SquareBracketProperty { "[" Value "]" }

PropertyAccess { "." Identifier | SquareBracketProperty }

Literal { Quoted | Range | Number | Boolean | DropLiteral | Null }

Range { "(" space? Value space? "," space? Value space? ")"}

@tokens {
    beginTag { "{%" }
    beginOutput { "{{" }
    endTag { "%}" }
    endOutput { "}}" }

    Identifier { @asciiLetter (@asciiLetter | @digit | "_")* }
    Number { @digit+ ("." @digit+)? }
    Quoted { '"' (!["] | '\"')* '"' }
    Boolean { "true" | "false" }
    Null { "nil" | "null" }
    DropLiteral { "empty" | "blank" | "forloop" }
    HTML { (![{] | "{" ![{%])+ }

    space { @whitespace+ }
    dash { dash }
    any { ![]+ }

    @precedence { beginTag, beginOutput, DropLiteral, Boolean, Null, Quoted, Number, Identifier, dash, endTag, endOutput, any }
}

@detectDelim
