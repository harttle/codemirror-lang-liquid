@top LiquidTemplate { (Output | tags | HTML)* }

@skip { space } {
    tags { AssignTag | EchoTag | ForTag | LiquidTag | UnkownTag }
    AssignTag { tag<assignTagContent> }
    EchoTag { tag<echoTagContent> }
    ForTag { tag<forTagContent> }
    LiquidTag { tag<liquidTagContent> }
    UnkownTag[@name="Tag"] { tag<unkownTagContent> }

    tagContents { assignTagContent | echoTagContent | forTagContent | unkownTagContent }
    assignTagContent { assign VariableDefinition "=" filteredValue }
    echoTagContent { echo filteredValue }
    forTagContent { for VariableDefinition kw<"in"> value (arg<"reversed"> | kv<"offset"> | kv<"limit">)* }
    liquidTagContent { liquid (linebreak+ tagContents)* linebreak* }
    unkownTagContent { unknownTagName (UnkownTagArg)* }

    value { VariableName | MemberExpression | literal | Range }
    literal { Quoted | Number | Boolean | DropLiteral | Null }
	VariableName { identifier }
	VariableDefinition { identifier }
	PropertyName { identifier }
	MemberExpression { value ("." PropertyName | "[" value "]") | "[" value "]"}
    Range { "(" value ".." value ")"}

    KeyValuePair { VariableDefinition ":" value }
    kv<T> { arg<T> ":" value }
    filteredValue { value (Filter)* }
    Output { BeginOutput filteredValue EndOutput }

    Filter { "|" FilterName ":" FilterArgs }
    FilterName { identifier }
    FilterArgs { FilterArg ("," FilterArg)* }
    FilterArg { value | KeyValuePair }

    tag<T> { BeginTag T EndTag }
}

arg[@name="ArgumentName"]<type> { @specialize[@name={type}]<identifier, type> }
kw[@name={type}]<type> { @specialize<identifier, type> }
Boolean { @specialize<identifier, "true" | "false"> }
Null { @specialize<identifier, "nil" | "null"> }
DropLiteral { @specialize<identifier, "empty" | "blank" | "forloop"> }

assign[@name="TagName"] { @specialize<identifier, "assign"> }
for[@name="TagName"] { @specialize<identifier, "for"> }
liquid[@name="TagName"] { @specialize<identifier, "liquid"> }
echo[@name="TagName"] { @specialize<identifier, "echo"> }
unknownTagName[@name="TagName"] { identifier }

@tokens {
    BeginTag[closedBy=EndTag] { "{%" | "{%-" }
    EndTag[openedBy=BeginTag] { "%}" | "-%}" }
    BeginOutput[closedBy=EndOutput] { "{{" | "{{-" }
    EndOutput[openedBy=BeginOutput] { "}}" | "-}}" }

    identifier { @asciiLetter (@asciiLetter | @digit | "_")* }
    Number { @digit+ ("." @digit+)? }
    Quoted { "\"" (!["] | '\\"')* "\"" | "'" (!['] | "\\'")* "'"}
    HTML { (![{] | "{" ![{%])+ }
    UnkownTagArg { (![%\r\n] | "%" ![}\r\n] | "%" @eof )+ }

    "["
    "]"
    "."
    ":"
    "="
    ".."
    linebreak { "\r"? "\n" }
    space { (" " | "\t")+ }

    @precedence { BeginTag, BeginOutput, EndTag, EndOutput, Quoted, Number, identifier, space, "..", "=", ":", ".", "[", "]", UnkownTagArg }
}
